{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taterthot\\\\Desktop\\\\final tkd\\\\ttrenton\\\\src\\\\client\\\\src\\\\components\\\\popup\\\\signup.js\";\nimport React, { Component } from 'react';\nimport './signup.css';\nimport axios from 'axios';\nexport default class Popup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPopupOpen: false,\n      openOnce: 0,\n      email: ''\n    };\n    this.startTimer();\n  }\n\n  startTimer() {\n    if (this.state.openOnce === 0) {\n      setTimeout(() => {\n        this.setState({\n          isPopupOpen: true\n        });\n      }, 2000);\n      this.setState({\n        openOnce: 1\n      });\n    }\n  }\n\n  send(email) {\n    alert(email);\n\n    if (email !== '') {\n      axios({\n        method: 'POST',\n        url: 'https://us3.api.mailchimp.com/3.0/lists/4d4eb89697/members',\n        crossdomain: true,\n        add_headers: {\n          'cache-control': 'no-cache',\n          'X-Requested-With': 'XMLHttpRequest',\n          Connection: 'keep-alive',\n          'Content-Length': '69',\n          'Accept-Encoding': 'gzip, deflate',\n          Cookie: '_mcid=1.e1bf4e5382802f8e4d5c8d275be90528; _AVESTA_ENVIRONMENT=prod',\n          Host: 'https://us3.api.mailchimp.com',\n          'Postman-Token': '8b1761fc-624f-4747-8aa7-2c400dc399cd,8828c4e7-0365-45b1-b735-1352031c3759',\n          'Cache-Control': 'no-cache',\n          Accept: '*/*',\n          Origin: '*',\n          'User-Agent': 'PostmanRuntime/7.15.2',\n          Authorization: 'Basic d21hOTk6Yzk0ZTY3MTMxYWZiMzQ0ZjBmMGM0NTg3ODU0OTdmYWEtdXMz',\n          'Content-Type': 'application/json'\n        },\n        body: {\n          email_address: {\n            email\n          },\n          status: 'subscribed'\n        },\n        json: true\n      }).then(function response() {\n        console.log(\"success\");\n      }).catch(function (error) {\n        console.log(\"bad\");\n      });\n    }\n  }\n\n  bindV(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.state.isPopupOpen ? \"popup-container\" : \"popup-closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fa fa-times\",\n      \"aria-hidden\": \"true\",\n      onClick: () => this.setState({\n        isPopupOpen: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"JOIN THE WMA FAMILY TODAY\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"LIMITED $65 SPECIAL INCLUDES FREE UNIFORM\"), React.createElement(\"input\", {\n      placeholder: \"    Email Address\",\n      type: \"text\",\n      value: this.state.email,\n      onChange: this.bindV.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"subscribe\",\n      onClick: this.send(this.state.email),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"SUBSCRIBE\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Taterthot\\Desktop\\final tkd\\ttrenton\\src\\client\\src\\components\\popup\\signup.js"],"names":["React","Component","axios","Popup","constructor","props","state","isPopupOpen","openOnce","email","startTimer","setTimeout","setState","send","alert","method","url","crossdomain","add_headers","Connection","Cookie","Host","Accept","Origin","Authorization","body","email_address","status","json","then","response","console","log","catch","error","bindV","event","target","value","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './signup.css';\r\nimport axios from 'axios';\r\n\r\nexport default class Popup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            isPopupOpen: false,\r\n            openOnce: 0,\r\n            email: '',\r\n        }\r\n\r\n        this.startTimer();\r\n    }\r\n\r\n    startTimer() {\r\n        \r\n        if(this.state.openOnce === 0) {\r\n            setTimeout(()=> {\r\n                this.setState({\r\n                    isPopupOpen: true\r\n                })\r\n            }, 2000)\r\n            this.setState({\r\n                openOnce: 1\r\n            })\r\n        }\r\n    }\r\n\r\n    send(email) {\r\n        alert(email);\r\n        if(email !== '') {\r\n\r\n            axios({ method: 'POST',\r\n            url: 'https://us3.api.mailchimp.com/3.0/lists/4d4eb89697/members',\r\n            crossdomain: true,\r\n            add_headers: \r\n            { 'cache-control': 'no-cache',\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n              Connection: 'keep-alive',\r\n              'Content-Length': '69',\r\n              'Accept-Encoding': 'gzip, deflate',\r\n              Cookie: '_mcid=1.e1bf4e5382802f8e4d5c8d275be90528; _AVESTA_ENVIRONMENT=prod',\r\n              Host: 'https://us3.api.mailchimp.com',\r\n              'Postman-Token': '8b1761fc-624f-4747-8aa7-2c400dc399cd,8828c4e7-0365-45b1-b735-1352031c3759',\r\n              'Cache-Control': 'no-cache',\r\n              Accept: '*/*',\r\n              Origin: '*',\r\n              'User-Agent': 'PostmanRuntime/7.15.2',\r\n              Authorization: 'Basic d21hOTk6Yzk0ZTY3MTMxYWZiMzQ0ZjBmMGM0NTg3ODU0OTdmYWEtdXMz',\r\n              'Content-Type': 'application/json' },\r\n    \r\n            body: { email_address: {email}, status: 'subscribed' },\r\n            json: true \r\n            }).then(function response() {\r\n                console.log(\"success\");\r\n            }).catch(function(error){\r\n                console.log(\"bad\");\r\n            });\r\n        }\r\n    }\r\n\r\n    bindV(event) {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className={this.state.isPopupOpen ? \"popup-container\" : \"popup-closed\"}>\r\n                    \r\n                    <div className='yes'>\r\n\r\n                        <div className=\"x\"> \r\n                            <i class=\"fa fa-times\" aria-hidden=\"true\" onClick={ () => this.setState({isPopupOpen: false})}></i>\r\n                        </div>\r\n                        <h1>JOIN THE WMA FAMILY TODAY</h1>\r\n                        <p>LIMITED $65 SPECIAL INCLUDES FREE UNIFORM</p>\r\n\r\n                        <input placeholder=\"    Email Address\" type=\"text\" value={this.state.email} onChange={this.bindV.bind(this)} />\r\n                        <button type=\"submit\" className=\"subscribe\" onClick={this.send(this.state.email)}>SUBSCRIBE</button>\r\n\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}