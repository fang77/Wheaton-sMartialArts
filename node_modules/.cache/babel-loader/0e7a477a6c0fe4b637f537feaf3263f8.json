{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useRouter } from 'state'; // Component that attaches scroll to top hanler on router change\n// renders nothing, just attaches side effects\n\nexport const ScrollToTopControlller = () => {\n  // this assumes that current router state is accessed via hook\n  // but it does not matter, pathname and search (or that ever) may come from props, context, etc.\n  const _useRouter = useRouter(),\n        pathname = _useRouter.pathname,\n        search = _useRouter.search; // just run the effect on pathname and/or search change\n\n\n  useEffect(() => {\n    try {\n      // trying to use new API - https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    } catch (error) {\n      // just a fallback for older browsers\n      window.scrollTo(0, 0);\n    }\n  }, [pathname, search]); // renders nothing, since nothing is needed\n\n  return null;\n};","map":{"version":3,"sources":["C:\\Users\\Taterthot\\Desktop\\final tkd\\ttrenton\\src\\ScrollToTop.js"],"names":["React","useEffect","useRouter","ScrollToTopControlller","pathname","search","window","scroll","top","left","behavior","error","scrollTo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAEA;AACA;;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C;AACA;AAF0C,qBAGZD,SAAS,EAHG;AAAA,QAGjCE,QAHiC,cAGjCA,QAHiC;AAAA,QAGvBC,MAHuB,cAGvBA,MAHuB,EAK1C;;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF;AACAK,MAAAA,MAAM,CAACC,MAAP,CAAc;AACZC,QAAAA,GAAG,EAAE,CADO;AAEZC,QAAAA,IAAI,EAAE,CAFM;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACd;AACAL,MAAAA,MAAM,CAACM,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;AACF,GAZQ,EAYN,CAACR,QAAD,EAAWC,MAAX,CAZM,CAAT,CAN0C,CAoB1C;;AACA,SAAO,IAAP;AACD,CAtBM","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useRouter } from 'state';\r\n\r\n// Component that attaches scroll to top hanler on router change\r\n// renders nothing, just attaches side effects\r\nexport const ScrollToTopControlller = () => {\r\n  // this assumes that current router state is accessed via hook\r\n  // but it does not matter, pathname and search (or that ever) may come from props, context, etc.\r\n  const  { pathname, search } = useRouter();\r\n  \r\n  // just run the effect on pathname and/or search change\r\n  useEffect(() => {\r\n    try {\r\n      // trying to use new API - https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo\r\n      window.scroll({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth',\r\n      });\r\n    } catch (error) {\r\n      // just a fallback for older browsers\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [pathname, search]);\r\n  \r\n  // renders nothing, since nothing is needed\r\n  return null;\r\n};"]},"metadata":{},"sourceType":"module"}